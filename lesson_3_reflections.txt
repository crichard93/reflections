Q: When would you want to use a remote repository rather than keeping all your work
local?

A: You can work on it from any location with Internet access. 
Having a centralized location to store the project makes collaboration with others easier.


---------------------------
  

Q: Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

A: You do not want a file to change while you are updating it. You also may not want
certain files/commits from the remote repository on the local one. 


--------------------------


Q: Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

A: Forks are clones of repositories created by GitHub.  They are used when one does not have access to edit someone else's repository.

Clones are copies of a repository. These are used to locally pull a repository from GitHub, or to copy a repository to another location on a local machine.

Branches are simply a separate path of commits. These are used to test different versions of applications or to work on updates without affecting the master branch. 
The master branch should always be operational, while using other branches to test out changes without fear of ruining the master branch. 

-------------------------


Q: What is the benefit of having a copy of the last known state of the remote
stored locally?

A: Most importantly, you have access to the latest changes to the remote, but you don't have to merge it on the spot. You can work on merging it in your own time if that's the intent.  It also ensures you are aware of any changes other developers have implemented to the code base.


-------------------------


Q: How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?


A: It depends on who is collaborating.  If possible, I would use direct communication as much as possible to coordinate collaboration. Failing that, I would use a mixture of emails and texts/calls to collaborate without Git and Github. Emails can be used to send files.  

Using emails and cell phones to collaborate would probably make it easier to make sure we always have the most up-to-date version and always are aware of each other's updates.  Keeping track of changes would be much more difficult. Also, not having the ability to auto-merge would make it more time-consuming to perform the merges manually. Peeling back changes to fix bugs could pose a challenge. Also, testing out new features would be hard because we would have to make a very conscious effort to track those separately to the production version.


---------------------------


Q: When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

A: 